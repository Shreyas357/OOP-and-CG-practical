
import java.awt.*;
import javax.swing.*;

public class LineDrawingDemo extends JPanel {

    public void paint(Graphics g) {
        super.paint(g);
        Graphics2D g2 = (Graphics2D) g;

        // Rectangle using DDA (Dotted)
        g2.setColor(Color.BLUE);
        drawDDALine(g2, 50, 50, 200, 50, "dotted");
        drawDDALine(g2, 200, 50, 200, 150, "dotted");
        drawDDALine(g2, 200, 150, 50, 150, "dotted");
        drawDDALine(g2, 50, 150, 50, 50, "dotted");

        // Rectangle using DDA (Thick)
        g2.setColor(Color.GREEN);
        drawDDALine(g2, 250, 50, 400, 50, "thick");
        drawDDALine(g2, 400, 50, 400, 150, "thick");
        drawDDALine(g2, 400, 150, 250, 150, "thick");
        drawDDALine(g2, 250, 150, 250, 50, "thick");

        // Diamond using Bresenham (Dashed)
        g2.setColor(Color.RED);
        drawBresenhamLine(g2, 150, 250, 250, 350, "dashed");
        drawBresenhamLine(g2, 250, 350, 350, 250, "dashed");
        drawBresenhamLine(g2, 350, 250, 250, 150, "dashed");
        drawBresenhamLine(g2, 250, 150, 150, 250, "dashed");

        // Diamond using Bresenham (Solid)
        g2.setColor(Color.MAGENTA);
        drawBresenhamLine(g2, 450, 250, 550, 350, "solid");
        drawBresenhamLine(g2, 550, 350, 650, 250, "solid");
        drawBresenhamLine(g2, 650, 250, 550, 150, "solid");
        drawBresenhamLine(g2, 550, 150, 450, 250, "solid");
    }

    void drawDDALine(Graphics g, int x1, int y1, int x2, int y2, String style) {
        int dx = x2 - x1;
        int dy = y2 - y1;
        int steps = Math.max(Math.abs(dx), Math.abs(dy));
        float xInc = dx / (float) steps;
        float yInc = dy / (float) steps;
        float x = x1, y = y1;

        for (int i = 0; i <= steps; i++) {
            if (style.equals("dotted")) {
                if (i % 5 == 0)
                    g.fillRect(Math.round(x), Math.round(y), 1, 1);
            } else if (style.equals("thick")) {
                g.fillRect(Math.round(x), Math.round(y), 3, 3);
            } else {
                g.fillRect(Math.round(x), Math.round(y), 1, 1);
            }
            x += xInc;
            y += yInc;
        }
    }

    void drawBresenhamLine(Graphics g, int x1, int y1, int x2, int y2, String style) {
        int dx = Math.abs(x2 - x1);
        int dy = Math.abs(y2 - y1);
        int sx = (x1 < x2) ? 1 : -1;
        int sy = (y1 < y2) ? 1 : -1;
        int err = dx - dy;
        int count = 0;

        while (true) {
            if (style.equals("dashed")) {
                if (count % 10 < 6)
                    g.fillRect(x1, y1, 1, 1);
            } else {
                g.fillRect(x1, y1, 1, 1);
            }

            if (x1 == x2 && y1 == y2)
                break;

            int e2 = 2 * err;
            if (e2 > -dy) {
                err -= dy;
                x1 += sx;
            }
            if (e2 < dx) {
                err += dx;
                y1 += sy;
            }
            count++;
        }
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("Line Drawing Algorithms");
        LineDrawingDemo panel = new LineDrawingDemo();
        frame.add(panel);
        frame.setSize(800, 500);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }
}
